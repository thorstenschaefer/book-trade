{"version":3,"file":"user.service.js","sourceRoot":"","sources":["user.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { AngularFire, FirebaseObjectObservable, FirebaseListObservable, FirebaseAuthState, AuthProviders, AuthMethods } from 'angularfire2';\n\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/switchMap';\nimport 'rxjs/add/operator/share';\nimport 'rxjs/add/observable/of';\n\nimport { User } from './user';\n\nconst LOGIN_CONFIG = { provider: AuthProviders.Password, method: AuthMethods.Password };\n\n@Injectable()\nexport class UserService {\n\n  private users: FirebaseObjectObservable<any>;  \n  \n  public user: Observable<User>;\n  public loggedIn: Observable<boolean>;\n\n  constructor(private af:AngularFire) {\n    this.users = this.af.object('/users');\n    this.user = this.af.auth.flatMap(auth => auth === null ? Observable.of(null) : this.af.object('/users/' + auth.uid));\n    this.loggedIn = this.user.map(user => user !== null);\n  }\n    \n  login(email:string, password:string) {\n    // console.log(\"Login called\");\n    return this.af.auth.login({ email:email, password:password }, LOGIN_CONFIG);\n  }\n  \n logout():void {\n    // console.log(\"Logout called\");\n    this.af.auth.logout();\n  }\n    \n  getUser(id:string):Observable<User> {\n    if (id == null)\n      return Observable.of(null);\n    return this.af.object('/users/' + id);\n  }\n  \n  updateUserData(user: User) {\n    // console.log(\"Updating user information \" + JSON.stringify(user));\n    let userData = this.af.object('/users/' + user.id);\n    userData.update({ 'name':user.name, 'city':user.city, 'state':user.state });\n  }\n  \n  signup(user:User):Promise<any> {\n    // console.log(\"user.service: SIGNUP \" + JSON.stringify(user));\n    let promise = this.af.auth.createUser(user).then(\n      newUser => {\n        // console.log(\"new user created, storing it in the users collection\");\n        let userId = newUser.uid;\n        user.id = userId;\n        // console.warn(\"auth user \" + JSON.stringify(user));\n        this.af.auth.login(user).then(\n          auth => {\n            let object = {};\n            delete user.password;\n            object[userId] = user;\n            this.users.update( object );\n          }\n        )\n      }\n    ).catch(e => console.error(e));\n    \n    return promise;\n  }\n}\n"]}