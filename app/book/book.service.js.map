{"version":3,"file":"book.service.js","sourceRoot":"","sources":["book.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Http, URLSearchParams } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/observable/of';\nimport { AngularFire, FirebaseListObservable } from 'angularfire2';\n\nimport 'underscore';\ndeclare let _;\n\nimport { Book } from './book';\nimport { User, UserService } from '../user';\nimport { TradeRequest } from './trade-request';\n\nconst GOOGLE_BOOKS_API = 'https://www.googleapis.com/books/v1/volumes';\n\n@Injectable()\nexport class BookService {\n  \n  public allTradeRequests:FirebaseListObservable<TradeRequest[]>;\n  public allBooks:FirebaseListObservable<Book[]>;\n  \n  public userBooks:Observable<Book[]>;\n  \n  constructor(\n    private http:Http,\n    private af:AngularFire,\n    private userService:UserService\n  ) {\n    this.allTradeRequests = <FirebaseListObservable<TradeRequest[]>>this.af.list('/traderequests');\n    this.allBooks = this.af.list('/books');\n    userService.user.subscribe(user => this.userBooks = (user === null ? null : this.allBooks.map(books => books.filter(book => book.owner === user.id))));\n  }\n\n  findBooks(query:string):Observable<Book[]> {\n    console.log(\"Finding books using query: \" + query);\n    if (!query || query.length === 0) {\n      return Observable.of([]);\n    }\n\n    let search = new URLSearchParams()\n    search.set('q', query);\n\n    return this.http.get(GOOGLE_BOOKS_API, { search } )\n      .map(response => response.json())\n      .map(object => object.items)\n      .map(array => array.map(bookInfo => bookInfo.volumeInfo))\n      .map(array => array.map(bookInfo => <Book>_.pick(bookInfo, 'id', 'authors', 'title', 'subtitle', 'language', 'description', 'pageCount', 'imageLinks')));    \n  }\n  \n  getBooksOfUser(userId: string): Observable<Book[]> {\n    console.log(\"Retrieving books of user...\" + userId);\n    if (!userId || userId.length === 0)\n      return Observable.of([]);\n      console.log(\"returning user book list\");\n    return this.userBooks;\n  }\n  \n  getBook(id:string):Observable<Book> {\n    return this.af.object('/books/' + id);\n  }\n\n\n  deleteBook(user:User, book:Book) {\n    console.log(\"Deleting book \" + book.title + \" from user \" + user.name);\n    if (this.userBooks === null) {\n      console.warn(\"User \" + user.name + \" not logged in\");\n      return;\n    }\n    \n    this.allBooks.remove(book);\n  }\n  \n  addBook(user:User, book:Book) {\n    console.log(\"Adding book \" + book.title + \" to user \" + user.name);\n    if (this.userBooks === null) {\n      console.warn(\"User \" + user.name + \" not logged in\");\n      return;\n    }\n    \n    book.owner = user.id; // add an owner reference\n    console.log(\"pushing book to general book list\");\n    this.allBooks.push(book);    \n  }\n  \n  addTradeRequest(tradeRequest:TradeRequest) {\n    this.allTradeRequests.push(tradeRequest);\n  }\n  \n  getTradeRequestsFrom(user:User):Observable<TradeRequest[]> {\n    return user === null ? Observable.of([]) : this.allTradeRequests.map(requests => requests.filter(request => request.requesterId === user.id));\n  }\n  getTradeRequestsBy(user:User):Observable<TradeRequest[]> {\n    return user === null ? Observable.of([]) : this.allTradeRequests.map(requests => requests.filter(request => request.ownerId === user.id && request.status === 'new'));\n  }\n\n  updateRequestStatus(request:TradeRequest, newStatus:string) {\n    this.af.object('/traderequests/' + request.$key).update({status:newStatus});\n  }\n}\n"]}