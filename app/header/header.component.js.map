{"version":3,"file":"header.component.js","sourceRoot":"","sources":["header.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAkC,eAAe,CAAC,CAAA;AAClD,qBAA4B,SAAS,CAAC,CAAA;AACtC,uBAA0C,iBAAiB,CAAC,CAAA;AAU5D;IAKE,yBAAoB,MAAa,EAAU,WAAuB;QALpE,iBA8BC;QAzBqB,WAAM,GAAN,MAAM,CAAO;QAAU,gBAAW,GAAX,WAAW,CAAY;QAChE,0DAA0D;QAC1D,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,UAAA,CAAC;YAC1B,KAAI,CAAC,QAAQ,GAAG,CAAC,KAAK,IAAI,CAAC;YAC3B,KAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QAChB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kCAAQ,GAAR;IACA,CAAC;IAED,gCAAM,GAAN;QACE,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QAC1B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IACnC,CAAC;IAED,+BAAK,GAAL,UAAM,KAAY,EAAE,QAAe;QAAnC,iBAOC;QANC,IAAI,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QACtD,gDAAgD;QAChD,OAAO,CAAC,IAAI,CAAC,UAAA,KAAK;YAChB,qCAAqC;YACrC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA,mCAAmC;QACjF,CAAC,CAAC,CAAC,KAAK,CAAC,UAAA,MAAM,IAAI,OAAA,KAAK,CAAC,MAAM,CAAC,EAAb,CAAa,CAAC,CAAC;IACpC,CAAC;IAlCH;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,YAAY;YACtB,WAAW,EAAE,uBAAuB;YACpC,UAAU,EAAE,CAAC,0BAAiB,CAAC;SAChC,CAAC;;uBAAA;IA+BF,sBAAC;AAAD,CAAC,AA9BD,IA8BC;AA9BY,uBAAe,kBA8B3B,CAAA","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user';\nimport { ROUTER_DIRECTIVES, Router } from '@angular/router';\n\nimport { User } from '../user';\n\n@Component({\n  moduleId: module.id,\n  selector: 'app-header',\n  templateUrl: 'header.component.html',\n  directives: [ROUTER_DIRECTIVES]  \n})\nexport class HeaderComponent implements OnInit {\n\n  private loggedIn:boolean;\n  private user:User;\n  \n  constructor(private router:Router, private userService:UserService) {\n    // userService.loggedIn.subscribe(v => this.loggedIn = v);\n    userService.user.subscribe(v => {\n      this.loggedIn = v !== null;\n      this.user = v;\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  logout() {\n    this.userService.logout();\n    this.router.navigate(['/books']);\n  }\n\n  login(email:string, password:string) {\n    let promise = this.userService.login(email, password);\n    // after successful login, redirect to user page\n    promise.then(value => {\n      // console.log(\"login PROMISE.THEN\");\n      this.router.navigate(['/user/', value.uid]);//, 'user', value.password.email]);\n    }).catch(reason => alert(reason));\n  }\n\n}\n"]}