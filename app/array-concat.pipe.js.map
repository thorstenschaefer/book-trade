{"version":3,"file":"array-concat.pipe.js","sourceRoot":"","sources":["array-concat.pipe.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAoC,eAAe,CAAC,CAAA;AAKpD;IAAA;IAUA,CAAC;IARC,+BAAS,GAAT,UAAU,KAAY,EAAE,IAAU,EAAE,UAAmB,EAAE,WAAoB;QAC3E,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC;YACT,MAAM,CAAC,UAAU,GAAG,UAAU,GAAG,EAAE,CAAC;QACtC,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC;YACrB,MAAM,CAAC,WAAW,GAAG,WAAW,GAAG,EAAE,CAAC;QACxC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,UAAC,CAAC,EAAC,CAAC,IAAK,OAAA,CAAC,GAAG,IAAI,GAAG,CAAC,EAAZ,CAAY,CAAC,CAAC;IAC7C,CAAC;IAXH;QAAC,WAAI,CAAC;YACJ,IAAI,EAAE,aAAa;SACpB,CAAC;;mBAAA;IAWF,kBAAC;AAAD,CAAC,AAVD,IAUC;AAVY,mBAAW,cAUvB,CAAA","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'arrayConcat'\n})\nexport class ArrayConcat implements PipeTransform {\n\n  transform(array: any[], args?: any, nullString?: string, emptyString?: string): string {\n    if (!array)\n      return nullString ? nullString : '';\n    if (array.length === 0)\n      return emptyString ? emptyString : '';\n    return array.reduce((a,b) => a + \", \" + b);\n  }\n\n}\n"]}